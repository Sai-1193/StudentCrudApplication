import React, { useEffect, useState } from "react";
import { Grid, Box, Button, Modal, ModalHeader, ModalBody, ModalFooter, IconButton } from "@mui/material";
import YAML from "js-yaml";

interface Test {
    testName: string;
    api: string;
    method: string;
    // Define other properties as needed
}

interface Service {
    serviceName: string;
    tests: Test[];
}

interface FormState {
    services: Service[];
}

const FormWithYamlView: React.FC = () => {
    const [formState, setFormState] = useState<FormState>({ services: [] });
    const [newServiceName, setNewServiceName] = useState<string>("");
    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);
    const [yamlStr, setYamlStr] = useState<string>("");

    useEffect(() => {
        updateYamlString(formState);
    }, [formState]);

    const updateYamlString = (state: FormState) => {
        const yamlString = YAML.dump(state);
        setYamlStr(yamlString);
    };

    const addService = () => {
        const newService: Service = {
            serviceName: newServiceName,
            tests: [] // Initialize with an empty array of tests
        };
        setFormState((prev) => ({
            services: [...prev.services, newService]
        }));
        setNewServiceName("");
        setIsModalOpen(false);
    };

    return (
        <Box sx={{ width: "100%" }}>
            <Grid container spacing={2}>
                <Grid item xs={6}>
                    <Button onClick={() => setIsModalOpen(true)}>Add Service</Button>
                    {formState.services.map((service, index) => (
                        <Box key={index} sx={{ borderBottom: "1px solid #e8e8e8", padding: 2 }}>
                            <h4>{service.serviceName}</h4>
                            <IconButton onClick={() => {/* Edit Service logic */}}>Edit</IconButton>
                            <IconButton onClick={() => {/* Delete Service logic */}}>Delete</IconButton>
                        </Box>
                    ))}
                </Grid>
                <Grid item xs={6}>
                    <pre>{yamlStr}</pre>
                </Grid>
            </Grid>
            <Modal open={isModalOpen} onClose={() => setIsModalOpen(false)}>
                <ModalHeader>Add Service</ModalHeader>
                <ModalBody>
                    <input
                        value={newServiceName}
                        onChange={(e) => setNewServiceName(e.target.value)}
                        placeholder="Service Name"
                    />
                </ModalBody>
                <ModalFooter>
                    <Button onClick={() => setIsModalOpen(false)}>Cancel</Button>
                    <Button onClick={addService}>Add</Button>
                </ModalFooter>
            </Modal>
        </Box>
    );
};

export default FormWithYamlView;
