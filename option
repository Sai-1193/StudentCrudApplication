import React, { useState } from 'react';

const AuthForm: React.FC = () => {
  const [authType, setAuthType] = useState<'basic' | 'bearer' | ''>('');

  const handleAuthTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setAuthType(event.target.value as 'basic' | 'bearer');
  };

  return (
    <div style={{ paddingLeft: '5%' }}>
      <div>
        <label htmlFor="authType">Type</label>
        <select
          id="authType"
          name="authType"
          value={authType}
          onChange={handleAuthTypeChange}
          style={{ marginLeft: '5%', border: 'none', borderBottom: '1px solid #ddd', width: '70%' }}
        >
          <option value="">Select Auth Type</option>
          <option value="basic">Basic</option>
          <option value="bearer">Bearer Token</option>
        </select>
      </div>

      {authType === 'basic' && (
        <>
          <div style={{ paddingTop: '10px' }}>
            <label htmlFor="username">Username</label>
            <input
              id="username"
              name="username"
              style={{ border: 'none', borderBottom: '1px solid #ddd', width: '70%' }}
              // value={test.request.auth.username}
              // onChange={(e) => handleAuthUsernameChange(e.target.value)}
            />
          </div>
          <div style={{ paddingTop: '10px' }}>
            <label htmlFor="password">Password</label>
            <input
              id="password"
              name="password"
              type="password"
              style={{ border: 'none', borderBottom: '1px solid #ddd', width: '70%' }}
              // value={test.request.auth.password}
              // onChange={(e) => handleAuthPasswordChange(e.target.value)}
            />
          </div>
        </>
      )}

      {authType === 'bearer' && (
        <div style={{ paddingTop: '10px' }}>
          <label htmlFor="token">Token</label>
          <input
            id="token"
            name="token"
            style={{ border: 'none', borderBottom: '1px solid #ddd', width: '70%' }}
            // value={test.request.auth.token}
            // onChange={(e) => handleAuthTokenChange(e.target.value)}
          />
        </div>
      )}
    </div>
  );
};

export default AuthForm;
