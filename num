import React, { useState } from 'react';

// Modal Component
const Modal: React.FC<{ isOpen: boolean; onClose: () => void; onSave: (number: number) => void }> = ({ isOpen, onClose, onSave }) => {
  const [number, setNumber] = useState<number | ''>('');

  const handleSave = () => {
    if (number !== '') {
      onSave(Number(number));
      setNumber('');
      onClose();
    }
  };

  return (
    isOpen ? (
      <div style={modalStyles}>
        <div style={modalContentStyles}>
          <h2>Enter a Number</h2>
          <input
            type="number"
            value={number}
            onChange={(e) => setNumber(e.target.value)}
          />
          <button onClick={handleSave}>Save</button>
          <button onClick={onClose}>Close</button>
        </div>
      </div>
    ) : null
  );
};

// Styles (basic inline styles for demo purposes)
const modalStyles: React.CSSProperties = {
  position: 'fixed',
  top: 0,
  left: 0,
  width: '100%',
  height: '100%',
  backgroundColor: 'rgba(0, 0, 0, 0.5)',
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center',
};

const modalContentStyles: React.CSSProperties = {
  backgroundColor: 'white',
  padding: '20px',
  borderRadius: '8px',
  boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',
};

// Main Component
const NumberAdder: React.FC = () => {
  const [numbers, setNumbers] = useState<number[]>([]);
  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);

  const handleAddNumber = () => {
    setIsModalOpen(true);
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
  };

  const handleSaveNumber = (number: number) => {
    setNumbers([...numbers, number]);
  };

  return (
    <div>
      <button onClick={handleAddNumber}>Add Numbers</button>
      <ul>
        {numbers.map((num, index) => (
          <li key={index}>{num}</li>
        ))}
      </ul>
      <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSave={handleSaveNumber} />
    </div>
  );
};

export default NumberAdder;
